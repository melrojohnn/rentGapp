version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: rentapp-postgres
    environment:
      POSTGRES_DB: rentapp
      POSTGRES_USER: rentapp
      POSTGRES_PASSWORD: rentapp123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./src/main/resources/populate_data.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - rentapp-network

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: rentapp-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - rentapp-network

  # Application
  rentapp:
    build: .
    container_name: rentapp-api
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/rentapp
      - SPRING_DATASOURCE_USERNAME=rentapp
      - SPRING_DATASOURCE_PASSWORD=rentapp123
      - AWS_ENDPOINT=http://host.docker.internal:4566
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_REGION=us-east-1
    depends_on:
      - postgres
    networks:
      - rentapp-network
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"

volumes:
  postgres_data:
  redis_data:

networks:
  rentapp-network:
    driver: bridge
